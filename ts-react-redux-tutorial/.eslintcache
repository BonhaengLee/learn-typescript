[{"D:\\react-exercise\\ts_projects\\learn-typescript\\ts-react-redux-tutorial\\src\\index.tsx":"1","D:\\react-exercise\\ts_projects\\learn-typescript\\ts-react-redux-tutorial\\src\\reportWebVitals.ts":"2","D:\\react-exercise\\ts_projects\\learn-typescript\\ts-react-redux-tutorial\\src\\App.tsx":"3","D:\\react-exercise\\ts_projects\\learn-typescript\\ts-react-redux-tutorial\\src\\modules\\index.ts":"4","D:\\react-exercise\\ts_projects\\learn-typescript\\ts-react-redux-tutorial\\src\\containers\\CounterContainer.tsx":"5","D:\\react-exercise\\ts_projects\\learn-typescript\\ts-react-redux-tutorial\\src\\modules\\counter.ts":"6","D:\\react-exercise\\ts_projects\\learn-typescript\\ts-react-redux-tutorial\\src\\components\\Counter.tsx":"7"},{"size":653,"mtime":1609042669083,"results":"8","hashOfConfig":"9"},{"size":404,"mtime":1609017543976,"results":"10","hashOfConfig":"9"},{"size":155,"mtime":1609098488375,"results":"11","hashOfConfig":"9"},{"size":622,"mtime":1609043600678,"results":"12","hashOfConfig":"9"},{"size":928,"mtime":1609100109240,"results":"13","hashOfConfig":"9"},{"size":1366,"mtime":1609095245132,"results":"14","hashOfConfig":"9"},{"size":892,"mtime":1609100579809,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"100vnx4",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\react-exercise\\ts_projects\\learn-typescript\\ts-react-redux-tutorial\\src\\index.tsx",[],[],"D:\\react-exercise\\ts_projects\\learn-typescript\\ts-react-redux-tutorial\\src\\reportWebVitals.ts",["34"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","D:\\react-exercise\\ts_projects\\learn-typescript\\ts-react-redux-tutorial\\src\\App.tsx",["35"],"import React from \"react\";\nimport CounterContainer from \"./containers/CounterContainer\";\n\nexport default function App() {\n  return <CounterContainer />;\n}\n","D:\\react-exercise\\ts_projects\\learn-typescript\\ts-react-redux-tutorial\\src\\modules\\index.ts",[],"D:\\react-exercise\\ts_projects\\learn-typescript\\ts-react-redux-tutorial\\src\\containers\\CounterContainer.tsx",["36"],"D:\\react-exercise\\ts_projects\\learn-typescript\\ts-react-redux-tutorial\\src\\modules\\counter.ts",["37","38","39","40"],"// NOTE: 액션 type 선언\nconst INCREASE = \"counter/INCREASE\" as const;\nconst DECREASE = \"counter/DECREASE\" as const;\nconst INCREASE_BY = \"counter/INCREASE_BY\" as const;\n\n// NOTE: 액션 생성 함수 선언\n// return 생략할 수 있어서 화살표 함수 이용\nexport const increase = () => ({ type: INCREASE });\nexport const decrease = () => ({ type: DECREASE });\nexport const increaseBy = (diff: number) => ({\n  type: INCREASE_BY,\n  payload: diff\n});\n\n// NOTE: 액션 객체들에 대한 type 준비하기\ntype CounterAction =\n  | ReturnType<typeof increase>\n  | ReturnType<typeof decrease>\n  | ReturnType<typeof increaseBy>;\n\n// NOTE: 상태의 타입과 상태의 초깃값 선언하기\n// 리덕스의 상태의 타입을 선언할 때는 type or interface\ntype CounterState = {\n  count: number;\n};\n\nconst initialState: CounterState = {\n  count: 0\n};\n\n// NOTE: 리듀서 작성하기, useReducer와 비슷하다.\n// 함수의 반환 타입에 상태의 타입을 넣는 것을 잊지 마라\nfunction counter(state: CounterState = initialState, action: CounterAction) {\n  switch (action.type) {\n    case INCREASE:\n      return { count: state.count + 1 };\n    case DECREASE:\n      return { count: state.count - 1 };\n    case INCREASE_BY:\n      return { count: state.count + action.payload };\n    default:\n      return state;\n  }\n}\n\nexport default counter;\n","D:\\react-exercise\\ts_projects\\learn-typescript\\ts-react-redux-tutorial\\src\\components\\Counter.tsx",["41"],{"ruleId":"42","severity":1,"message":"43","line":3,"column":25,"nodeType":"44","messageId":"45","endLine":3,"endColumn":57},{"ruleId":"42","severity":1,"message":"43","line":4,"column":16,"nodeType":"46","messageId":"45","endLine":4,"endColumn":30},{"ruleId":"42","severity":1,"message":"43","line":7,"column":16,"nodeType":"46","messageId":"45","endLine":7,"endColumn":43},{"ruleId":"42","severity":1,"message":"43","line":8,"column":25,"nodeType":"44","messageId":"45","endLine":8,"endColumn":30},{"ruleId":"42","severity":1,"message":"43","line":9,"column":25,"nodeType":"44","messageId":"45","endLine":9,"endColumn":30},{"ruleId":"42","severity":1,"message":"43","line":10,"column":27,"nodeType":"44","messageId":"45","endLine":10,"endColumn":44},{"ruleId":"42","severity":1,"message":"43","line":33,"column":1,"nodeType":"46","messageId":"45","endLine":33,"endColumn":76},{"ruleId":"42","severity":1,"message":"43","line":15,"column":16,"nodeType":"46","messageId":"45","endLine":20,"endColumn":17},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","FunctionDeclaration"]