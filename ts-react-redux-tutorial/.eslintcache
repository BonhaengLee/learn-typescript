[{"D:\\react-exercise\\ts_projects\\learn-typescript\\ts-react-redux-tutorial\\src\\App.tsx":"1","D:\\react-exercise\\ts_projects\\learn-typescript\\ts-react-redux-tutorial\\src\\containers\\CounterContainer.tsx":"2","D:\\react-exercise\\ts_projects\\learn-typescript\\ts-react-redux-tutorial\\src\\components\\Counter.tsx":"3","D:\\react-exercise\\ts_projects\\learn-typescript\\ts-react-redux-tutorial\\src\\index.tsx":"4","D:\\react-exercise\\ts_projects\\learn-typescript\\ts-react-redux-tutorial\\src\\modules\\index.ts":"5","D:\\react-exercise\\ts_projects\\learn-typescript\\ts-react-redux-tutorial\\src\\modules\\counter.ts":"6"},{"size":155,"mtime":1609267215956,"results":"7","hashOfConfig":"8"},{"size":896,"mtime":1609267318327,"results":"9","hashOfConfig":"8"},{"size":897,"mtime":1609266951240,"results":"10","hashOfConfig":"8"},{"size":585,"mtime":1609237353014,"results":"11","hashOfConfig":"8"},{"size":606,"mtime":1609199675626,"results":"12","hashOfConfig":"8"},{"size":1499,"mtime":1609200253598,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1tho8m4",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\react-exercise\\ts_projects\\learn-typescript\\ts-react-redux-tutorial\\src\\App.tsx",["27"],"D:\\react-exercise\\ts_projects\\learn-typescript\\ts-react-redux-tutorial\\src\\containers\\CounterContainer.tsx",["28"],"import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../modules/index';\nimport { increase, decrease, increaseBy } from '../modules/counter';\nimport Counter from '../components/Counter';\n\nexport default function CounterContainer() {\n  // NOTE: ts에서 특별한 점은 useSelector 부분에서 state의 타입을 RootState로 지정해서 사용한다는 것 외에는 없다.\n  const count = useSelector((state: RootState) => state.counter.count);\n  const dispatch = useDispatch();\n\n  const onIncrease = () => {\n    dispatch(increase());\n  };\n\n  const onDecrease = () => {\n    dispatch(decrease());\n  };\n\n  const onIncreaseBy = (diff: number) => {\n    dispatch(increaseBy(diff));\n  };\n\n  return (\n    <Counter\n      count={count}\n      onIncrease={onIncrease}\n      onDecrease={onDecrease}\n      onIncreaseBy={onIncreaseBy}\n    />\n  );\n}\n","D:\\react-exercise\\ts_projects\\learn-typescript\\ts-react-redux-tutorial\\src\\components\\Counter.tsx",["29"],"D:\\react-exercise\\ts_projects\\learn-typescript\\ts-react-redux-tutorial\\src\\index.tsx",[],"D:\\react-exercise\\ts_projects\\learn-typescript\\ts-react-redux-tutorial\\src\\modules\\index.ts",[],"D:\\react-exercise\\ts_projects\\learn-typescript\\ts-react-redux-tutorial\\src\\modules\\counter.ts",["30","31","32","33"],{"ruleId":"34","severity":1,"message":"35","line":4,"column":16,"nodeType":"36","messageId":"37","endLine":4,"endColumn":30},{"ruleId":"34","severity":1,"message":"35","line":7,"column":16,"nodeType":"36","messageId":"37","endLine":7,"endColumn":43},{"ruleId":"34","severity":1,"message":"35","line":15,"column":16,"nodeType":"36","messageId":"37","endLine":20,"endColumn":17},{"ruleId":"34","severity":1,"message":"35","line":9,"column":25,"nodeType":"38","messageId":"37","endLine":9,"endColumn":30},{"ruleId":"34","severity":1,"message":"35","line":10,"column":25,"nodeType":"38","messageId":"37","endLine":10,"endColumn":30},{"ruleId":"34","severity":1,"message":"35","line":11,"column":27,"nodeType":"38","messageId":"37","endLine":11,"endColumn":44},{"ruleId":"34","severity":1,"message":"35","line":35,"column":1,"nodeType":"36","messageId":"37","endLine":35,"endColumn":76},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","ArrowFunctionExpression"]